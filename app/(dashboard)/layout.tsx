import { Geist, Geist_Mono } from "next/font/google";
import "../globals.css";
import { Providers } from "../providers/providers";
import { headers } from "next/headers";
import { Session } from "next-auth";
import { AlertTriangle, TrendingUp } from "lucide-react";
import { auth } from "../../auth";
import { Button } from "@/components/ui/button";
import Link from "next/link";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

// export const metadata: Metadata = {
//    title: "Create Next App",   description: "Generated by create next app", };

export default async function UserDashboardLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const header = await headers();
  const cookie = header.get("cookie") ?? "";
  const session = await auth();
  const pathname = header.get("x-current-path");

  return (
    <section
      className={`${geistSans.variable} ${geistMono.variable} antialiased h-screen bg-background`}
    >
      {/* Header */}
      <header className="border-b border-primary/20 bg-gradient-card shadow-card w-full">
        <div className="container mx-auto py-4">
          <div className="flex items-center justify-between">
            <div className="flex items-center gap-3">
              <div
                className="p-2 rounded-lg bg-gradient-primary"
                // style={{ background: "var(--gradient-primary)" }}
              >
                <TrendingUp className="h-6 w-6 text-white" />
              </div>
              <div>
                <h1 className="text-2xl font-bold">DSC Protocol</h1>
                <p className="text-sm text-muted-foreground">
                  Decentralized Stablecoin Platform
                </p>
              </div>
            </div>
            <nav className="hidden md:flex items-center gap-2">
              <Button variant={"ghost"} asChild size="sm">
                <Link href="/">Home</Link>
              </Button>
              <Button
                variant={pathname === "/liquidations" ? "default" : "ghost"}
                asChild
                size="sm"
              >
                <Link href="/liquidations">
                  <AlertTriangle className="h-4 w-4 mr-2" />
                  Liquidations
                  {/* {liquidatableVaults.length > 0 && (
                      <span className="ml-2 px-1.5 py-0.5 text-xs bg-destructive text-destructive-foreground rounded-full">
                        {liquidatableVaults.length}
                      </span>
                    )} */}
                </Link>
              </Button>
            </nav>
          </div>
        </div>
      </header>
      {/* Main Content */}
      <Providers session={session} cookie={cookie}>
        <div className="container flex-1 flex mx-auto px-4 py-8 border border-red-600">
          {children}
        </div>
      </Providers>
    </section>
  );
}
